<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="paymentInfo">

	<!-- 결제 정보 Count -->
	<select id="selectPaymentInfoCnt" parameterType="hashmap" resultType="int">
		select count(merchant_uid) cnt
		from payment_info
		where 1=1
			and uid = #{loginId}
			<if test="startDt != null and endDt != null">
				and pay_date between #{startDt} and #{endDt}
			</if>
	</select>
	
	
	<!-- 결제 정보 목록 -->
	<select id="selectPaymentInfoList" parameterType="hashmap" resultType="allwork.vo.PaymentInfoVo">
		select pi.* 
			, DATEDIFF (now(), pi.pay_date) date_diff
			, (select count(uid) from recruit_view where uid = #{loginId} and view_type = 'resume' and view_date > pi.pay_date) view_cnt
		from payment_info pi
		where 1=1
			and pi.uid = #{loginId}
			<if test="startDt != null and endDt != null">
				and pi.pay_date between #{startDtTime} and #{endDtTime}
			</if>
		order by pi.pay_date desc
		limit #{start}, #{pageSize}
	</select>
	
	
	<!-- 총 결제금액 -->
	<select id="selectPaymentTotal" parameterType="hashmap" resultType="int">
		select ifNull(sum(pay_amount), 0) amount
		from payment_info
		where 1=1
			and uid = #{loginId}
	</select>
	
	
	<!-- 결제 정보 등록 -->
	<insert id="insertPaymentInfo" parameterType="hashmap">
		<![CDATA[
			insert into payment_info
			(	
				uid, merchant_uid, imp_uid, buyer_type, product_name, pay_method
				, pay_date
				, pay_amount, buyer_name, buyer_email
				, buyer_tel, buyer_addr, buyer_postcode, apply_num, status, success_status
				, receipt_url, card_name, bank_name, card_quota, card_number
				, product_type
			)
			values
			(	#{uid}, #{merchantUid}, #{impUid}, #{buyerType}, #{productName}, #{payMethod}
				, DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m-%d %H:%i:%s')
				, #{payAmount}, #{buyerName}, #{buyerEmail}
				, #{buyerTel}, #{buyerAddr}, #{buyerPostcode}, #{applyNum}, #{status}, #{successStatus}
				, #{receiptUrl}, #{cardName}, #{bankName}, #{cardQuota}, #{cardNumber}
				, #{productType}
			)
		]]>
	</insert>
	
	
	<!-- 결제 취소(환불) 정보 수정 -->
	<insert id="updateRefundPaymentInfo" parameterType="hashmap">
		<![CDATA[
			update payment_info
			set 
				refund_date = DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m-%d %H:%i:%s')
				, refund_status = #{refundStatus}
				, refund_amount = #{refundAmount}
			where 1=1
				and uid = #{uid}
				and merchant_uid = #{merchantUid}
				and imp_uid = #{impUid}
		]]>
	</insert>
	
	
	<!-- 유료열람서비스 등록 -->
	<insert id="insertPaidResumeSearch" parameterType="hashmap">
		<![CDATA[
			insert into paid_resume_search
			(	
				uid, resume_no, wdate
			)
			values
			(
				#{uid}, #{resumeNo}, DATE_FORMAT(CURRENT_TIMESTAMP, '%Y-%m-%d %H:%i:%s')
			)
		]]>
	</insert>
	
	<!-- 유료열람서비스 확인 -->
	<select id="selectPaidResumeSearchCount" parameterType="hashmap" resultType="int">
		select COUNT(*) cnt
		from paid_resume_search
		where 1=1
			AND uid = #{loginId}
			AND resume_no = #{resumeNo}
	</select>


</mapper>